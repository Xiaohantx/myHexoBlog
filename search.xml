<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2018%2F11%2F15%2F%E5%A4%A7%E5%9B%BE%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[大图测试]]></content>
  </entry>
  <entry>
    <title><![CDATA[CSS布局 flex篇]]></title>
    <url>%2F2018%2F11%2F12%2Fweb%2Fcss%2FCSS%E5%B8%83%E5%B1%80%20flex%E7%AF%87%2F</url>
    <content type="text"><![CDATA[掌握flex flex flex-direction 准备 123456789101112131415161718192021222324252627282930313233&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;title&gt;demo - 准备&lt;/title&gt; &lt;style&gt; .container&#123; width:400px; border: 1px dashed blue; display: flex; &#125; .box1,.box2,.box3,.box4,.box5&#123; width:100px;height:200px; &#125; .box1&#123;background:red;&#125; .box2&#123;background:yellow;&#125; .box3&#123;background:blue;&#125; .box4&#123;background:green;&#125; .box5&#123;background:brown;&#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="container"&gt; &lt;div class="box1"&gt;&lt;/div&gt; &lt;div class="box2"&gt;&lt;/div&gt; &lt;div class="box3"&gt;&lt;/div&gt; &lt;div class="box4"&gt;&lt;/div&gt; &lt;div class="box5"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; flex-wrap flex-flow justify-content 准备 1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;title&gt;demo - 准备&lt;/title&gt; &lt;style&gt; .container&#123; width:400px; border: 1px dashed blue; display: flex; &#125; .box1,.box2,.box3&#123; width:100px;height:200px; &#125; .box1&#123;background:red;&#125; .box2&#123;background:yellow;&#125; .box3&#123;background:blue;&#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="container"&gt; &lt;div class="box1"&gt;box1&lt;/div&gt; &lt;div class="box2"&gt;box2&lt;/div&gt; &lt;div class="box3"&gt;box3&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; justify-content align-items order flex-grow flex-shink flex align-self 使用flex布局三行自适应+两列自适应]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>flex</tag>
        <tag>布局</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【进阶篇】函数进阶]]></title>
    <url>%2F2018%2F08%2F17%2Fweb%2Fjs%2F%E3%80%90%E8%BF%9B%E9%98%B6%E7%AF%87%E3%80%91%E5%87%BD%E6%95%B0%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[this对象全局环境中的this 函数中的this 函数中的this：简单调用 函数中的this：对象方法调用 函数中的this：call和apply调用 函数中的this：构造函数调用 函数的双重职能ES6中的函数 判断函数是以何种方式被调用的 new.target 元属性 构造函数模式 vs 工厂模式 函数参数的传递方式按值传递 vs 按引用传递 基本类型按值传递 对象类型按什么传递？ 按共享传递 函数应用 立即执行函数表达式：IIFE ES6 不需要 IIFE 闭包 闭包：阻止变量被垃圾回收 闭包应用示例 闭包+立即执行函数的应用：封装（信息隐藏） 递归：在函数中调用函数本身 回调函数：同步回调、异步回调 同步回调 异步回调 柯里化（curry） 柯里化示例：生成唯一id的函数 普通实现：生成唯一id的函数 箭头函数箭头函数和普通函数的重要区别 箭头函数的语法 箭头函数的语法：更多细节 没有自己的this 没有自己的this：应用示例 不能使用new来调用 箭头函数和数组 创建立即执行函数 尾调用优化 尾调用的要求 尾递归]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>进阶篇</tag>
        <tag>this对象</tag>
        <tag>函数的双重职能</tag>
        <tag>函数参数的传递方式</tag>
        <tag>函数应用</tag>
        <tag>箭头函数、尾调用</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【进阶篇】原型]]></title>
    <url>%2F2018%2F08%2F15%2Fweb%2Fjs%2F%E3%80%90%E8%BF%9B%E9%98%B6%E7%AF%87%E3%80%91%E5%8E%9F%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[原型（prototype） Object.create() 创建的对象，原型是第一个参数，第一个参数如果是Now，就没有原型属性了 获取对象的原型属性 对象的原型属性：proto 设置对象的原型属性 检测是否为某个对象的原型 对象中的super关键字 Object.create(proto[, propertiesObject]) 原型链（prototype chain） 原型链：自定义构造函数 原型链示意图 操作对象属性属性的特性 查询属性 添加属性 添加属性：只读属性 添加属性：属性在原型上已存在 添加属性：setter 删除属性 检测属性 检测属性：propertyIsEnumerable 检测属性：一个不易觉察的坑要用hasOwnProperty方法 枚举属性 实践中的原型性能 共享带来的问题 不要扩展原型]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>进阶篇</tag>
        <tag>原型</tag>
        <tag>原型链</tag>
        <tag>操作对象属性</tag>
        <tag>实践中的原型</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【进阶篇】变量作用域]]></title>
    <url>%2F2018%2F08%2F14%2Fweb%2Fjs%2F%E3%80%90%E8%BF%9B%E9%98%B6%E7%AF%87%E3%80%91%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F%2F</url>
    <content type="text"><![CDATA[作用域简介 作用域分类 作用域示例（C）：静态作用域 输出结果为10 作用域示例（Perl）：动态作用域 声明提前函数作用域 声明提前 函数声明提前 函数可以提前，但是函数表达式不可以，会报错 变量声明和函数声明的提升优先级 块级作用域（ES6新增） 块级作用域：禁止重复声明 块级作用域：const声明 可以用freeze来限制修改属性 暂时性死区 循环语句中的块级绑定 循环语句中的函数 循环语句中的常量声明 全局块级绑定 作用域链 作用域链延长 作用域链延长：try-catch 作用域链延长：with]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>进阶篇</tag>
        <tag>作用域简介</tag>
        <tag>声明提前</tag>
        <tag>块级作用域</tag>
        <tag>作用域链</tag>
        <tag>作用域链延长</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【进阶篇】类型进阶]]></title>
    <url>%2F2018%2F08%2F11%2Fweb%2Fjs%2F%E3%80%90%E8%BF%9B%E9%98%B6%E7%AF%87%E3%80%91%E7%B1%BB%E5%9E%8B%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[原始类型和对象的区别JavaScript的数据类型 原始类型 原始类型：相等比较 对象类型 对象类型：相等比较 对象类型：另一个名字 复制变量的值复制变量的值 复制原始类型的值 复制对象类型的值 类型转换类型转换场景 类型转换场景：相等性（==） 类型转换 显示类型转换 显示类型转换：转字符串 显示类型转换：转数值 对象类型转字符串 对象类型转数值 类型识别类型识别 typeof的局限性 obj instanceof constructor constructor constructor 在某些场景下失效 instanceof 和 constructor 不可跨frame duck-typing Object.prototype.toString.call(obj) 类型识别总结 检测数组的原生方法：Array.isArray() DOM元素和宿主对象的检测 模板字面量 模板字面量：支持嵌套 模板字面量：tagged template 模板字面量：tagged template 示例 模板字面量：原始字符串值（raw value） Symbol 共享Symbol Symbol转其他类型 查找对象的Symbol属性 es6的内置Symbol Symbol.hasInstance Symbol.isConcatSpreadable]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>进阶篇</tag>
        <tag>数据类型的区别</tag>
        <tag>复制变量的值</tag>
        <tag>类型转换</tag>
        <tag>类型识别</tag>
        <tag>Symbol</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Error]]></title>
    <url>%2F2018%2F08%2F09%2Fweb%2Fjs%2FError%2F</url>
    <content type="text"><![CDATA[初识Error创建Error 抛出/捕获Error Error的属性 内建Error类型 自定义Error]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>了解Error对象</tag>
        <tag>学习内建Error类型</tag>
        <tag>学习自定义Error</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JSON]]></title>
    <url>%2F2018%2F08%2F04%2Fweb%2Fjs%2FJSON%2F</url>
    <content type="text"><![CDATA[JSON是什么 JavaScript Object Notation JS vs JSON JSON方法 JSON.parse JSON.stringify - 参数2 - 参数3]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>JSON</tag>
        <tag>parse</tag>
        <tag>stringify</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Date]]></title>
    <url>%2F2018%2F07%2F24%2Fweb%2Fjs%2FDate%2F</url>
    <content type="text"><![CDATA[Date基本知识简介 基本概念 创建日期 月份是从0开始的 日期方法 获取日期 设置日期 更多方法 Date类型常用操作日期格式化 format() 日期转换 获取某月的天数]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>日期</tag>
        <tag>Date</tag>
        <tag>获取日期</tag>
        <tag>设置日期</tag>
        <tag>日期格式化</tag>
        <tag>日期转换</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数组]]></title>
    <url>%2F2018%2F07%2F23%2Fweb%2Fjs%2F%E6%95%B0%E7%BB%84%2F</url>
    <content type="text"><![CDATA[数组数组 创建数组 - Array构造函数 创建数组 - 字面量 案例解答 获取数组元素 修改数组 数组构造函数的方法Array.isArray(arg) Array.from(items[,mapfn[,thisArg]]) mapfn thisArg Array.of(…items) 数组实例的属性arr.length 数组原型上的方法更改原数组方法 Array.prototype.sort(comparefn) Array.prototype.reverse() Array.prototype.push(…items) Array.prototype.unshift(…items) push VS unshift Array.prototype.pop() Array.prototype.shift() pop VS shift Array.prototype.splice(index,deleteCount,…items) Array.prototype.fill(value,[,start[,end]]) Array.prototype.copyWith(target,start[,end]) 不会更改原数组方法 Array.prototype.slice(start,end) Array.prototype.concat(…arguments) Array.prototype.join(sepatator) Array.prototype.forEach(callbackfn[,thisArg]) Array.prototype.map(callbackfn[,thisArg]) Array.prototype.reduce(callbackfn[,initialValue]) Array.prototype.reduceRight(callbackfn[,initialValue]) Array.prototype.indexOf(searchElement[,fromIndex]) Array.prototype.lastIndexOf(searchElement[,fromIndex]) Array.prototype.incloudes(searchElement[,fromIndex]) Array.prototype.find(predicate[,thisArg]) Array.prototype.findIndex(predicate[,thisArg]) Array.prototype.filter(callbackfn[,thisArg]) Array.prototype.ever(callbackfn[,thisArg]) Array.prototype.some(callbackfn[,thisArg]) Array.prototype.entries() Array.prototype.keys() Array.prototype.values()]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>数组构造方法</tag>
        <tag>数组原型方法</tag>
        <tag>更改原数组方法</tag>
        <tag>不更改原数组方法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[对象]]></title>
    <url>%2F2018%2F07%2F22%2Fweb%2Fjs%2F%E5%AF%B9%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[对象创建对象 操作对象的属性、 属性定义 属性描述符 Object.defineProperties Object.create() 属性的访问 属性的设置 属性的删除 属性检测 属性枚举 属性复制 对象的原型方法Object.prototype.constructor Object.prototype.toString() Object.prototype.valueof()]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>属性</tag>
        <tag>原型</tag>
        <tag>对象</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[字符串]]></title>
    <url>%2F2018%2F07%2F21%2Fweb%2Fjs%2F%E5%AD%97%E7%AC%A6%E4%B8%B2%2F</url>
    <content type="text"><![CDATA[字符串 表示字符串 字符串编码 String 类型String(value) String.fromCharCode(…codeUnits) String.fromCodePoint(…codeUnits) str.length String 方法String 方法 - 获取字符 String.prototype.charAt(index) 案例解决方案 String.prototype.charCodeAt(pos) String.prototype.codePointAt(pos) String.prototype.startsWith(searchString[,position]) String.prototype.endsWith(searchString[,position]) String 方法 - 获取字符串位置 String.prototype.indexOf(searchValue[,fromIndex]) 案例解决方案 String.prototype.lastindexOf(searchValue[,fromIndex]) String.prototype.includes(searchString[,position]) String 方法 - 模式匹配 String.prototype.search(regexp) 案例解决方案 String.prototype.match(regexp) String.prototype.replace(regexp|substr,newSubstr|function) String 方法 - 字符串操作 String.prototype.substring(indexStart[,indexEnd]) 案例解决方案 String.prototype.slice(beginSlice[,endSlice]) 案例解决方案 String.prototype.substr(start[,length]) 案例解决方案 String.prototype.split([separator][,limit]) 案例解决方案 String 方法 - 连接 String.prototype.concat(string2,string3[,…,stringN]) 案例解决方案 String 方法 - 大小写转换 String.prototype.toLowerCase() String.prototype.toUpperCase() String.prototype.repeat(count)]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>字符串类型</tag>
        <tag>字符串方法</tag>
        <tag>字符串位置</tag>
        <tag>获取字符串</tag>
        <tag>字符串匹配</tag>
        <tag>字符串连接</tag>
        <tag>字符串大小写转换</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数值]]></title>
    <url>%2F2018%2F07%2F19%2Fweb%2Fjs%2F%E6%95%B0%E5%80%BC%2F</url>
    <content type="text"><![CDATA[数值 1 3.14 0xA 2.5e11 Number引用类型Number(value) Number构造函数上的属性 Number构造函数上的方法 Number.isFinite(number) Number.isInteger(number) Number.isSafeInteger(number) Number.isNaN(number) Number.parseInt(string,radix) Number.parseFloat(string) 转换函数对比 Number原型链上的方法Number.prototype.toFixed(fractionDigits) Number.prototype.toExponential(fractionDigits) Number.prototype.toPrecision(precision) Number.prototype.toString([radix]) 应用 Math对象 Math对象的属性 Math.abs(x) Math.round(x) Math.ceil(x) Math.floor(x) 舍入方法对比 Math.max([value1[,value2[,…]]]) Math.min([value1[,value2[,…]]]) Math.random() Math的其他方法 应用 1-10之间的数]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>Number</tag>
        <tag>Number原型链</tag>
        <tag>Math</tag>
        <tag>Max</tag>
        <tag>Min</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[windows效率工具]]></title>
    <url>%2F2018%2F07%2F18%2Fshare%2F20180718%2Fwindows%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[本篇文章原文：https://www.liutf.com/posts/3720794851.html博主对原文部分内容有删减或修改，如侵权请联系删除。后续会持续更新相关版本 下载：PanDownload多线程下载百度云盘的利器，并且是免费的，作者禁止商用 结构化笔记：workflowyMake lists,not war.我常用于记录工作中的各种待办事项。 Markdown写作工具：Typora最好用的Markdown写作工具，所见即所得。 录屏工具：LICEcap比GifCam更好用。 文本编辑器：Sublime对比Atom，Sublime主要是打开速度更快，感觉更清爽。 这里本人更偏爱VScode一些 API工具：Postman强大的API调试、Http请求的工具 。可自动同步个人请求记录。 快速启动：WOX快速启动应用+文件搜索+各种实用插件（计算器、翻译、网页快速访问等）。我的最爱，没有它我几乎半残。 一开始从用altrun 然后试过Listary ，发现WOX 后，最为顺手，效率提升100%。 搜索工具：everything秒找电脑里的各种文件。与WOX完美集成。]]></content>
      <categories>
        <category>分享</category>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>数值符号</tag>
        <tag>css语法</tag>
        <tag>属性</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[函数]]></title>
    <url>%2F2018%2F07%2F18%2Fweb%2Fjs%2F%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[函数概述数学中的函数 子程序 子程序常用名称 JavaScript 中的子程序 JavaScript 中的函数 函数基础函数定义 函数定义： 构造函数的形式 函数调用 函数参数 函数参数：默认值 函数参数：剩余参数 函数内部属性 函数内部属性：arguments 函数内部属性: this 对象 函数是特殊对象 函数的属性和方法 函数的length属性 函数的name属性 函数的call方法 函数的apply方法 函数的call vs apply 函数的bind方法 变量作用域简介JS引擎查找变量的过程 变量作用域 变量作用域：块级作用域 原型简介对象 创建对象的方法 创建对象的方法： new运算符 原型 创建对象的方法： Object.create 箭头函数]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>原型</tag>
        <tag>函数</tag>
        <tag>bind</tag>
        <tag>call</tag>
        <tag>apply</tag>
        <tag>作用域</tag>
        <tag>箭头函数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[条件语句]]></title>
    <url>%2F2018%2F07%2F18%2Fweb%2Fjs%2F%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5%2F</url>
    <content type="text"><![CDATA[条件语句条件语句 if else 条件语句 switch 循环语句循环语句 while 循环语句 do while 循环语句 for 控制语句 continue 中断本次循环，进行到下一次循环中 控制语句 break 循环语句 for in 判断是否是自身属性（避免打印原型链上的） 异常捕获语句 with语句 不建议使用]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>条件语句</tag>
        <tag>循环语句</tag>
        <tag>控制语句</tag>
        <tag>异常捕获</tag>
        <tag>with语句</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[操作符和表达式]]></title>
    <url>%2F2018%2F07%2F02%2Fweb%2Fjs%2F%E6%93%8D%E4%BD%9C%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[表达式原始表达式 表达式 操作符 算数运算符 就是用来处理四则运算（加、减、乘、除）的符号 一元运算符 一些只需要一个操作数的运算符 赋值运算符 把某个常量或变量或表达式的值赋值给另一个变量 解构赋值 相等运算符 用于比较操作符左右的操作数是否相等 关系运算符 用于比较操作符左右的操作数的大小 位操作符 将其操作数转换为二进制后，进行与、或、非、异或等操作运算，最终返回JS中的一个数值 逻辑运算符 主要通过与、或、非来判断一个表达式的值是否为true 短路计算 条件运算符 是JS中唯一具有3个运算符的运算符，一般作为if语句的简短形式来使用]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>表达式</tag>
        <tag>运算符</tag>
        <tag>操作符</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据类型]]></title>
    <url>%2F2018%2F07%2F01%2Fweb%2Fjs%2F%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[数据类型概述编程领域中的数据类型 JavaScript的数据类型 数值类型（Number）数值采用的标准 整数 整数：其他进制 整数：八进制的特殊问题 浮点数 浮点数计算可能会有精度问题 特殊数值 字符串类型（String）字符串 字符串：引号使用规则 字符串：推荐写法 字符串：不能直接换行 字符串：转义字符 字符串：常见的转义字符 模板字符串 布尔类型 布尔值与控制语句 布尔值：假值与真值 Symbol类型 Undefined Null类型 对象类型（Object） 重要的特殊对象 类型识别]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>类型识别</tag>
        <tag>字符串类型</tag>
        <tag>数据类型</tag>
        <tag>布尔类型</tag>
        <tag>Symbol类型</tag>
        <tag>数值类型</tag>
        <tag>NULL类型</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基本语法]]></title>
    <url>%2F2018%2F07%2F01%2Fweb%2Fjs%2F%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[语法基础 语法基础：标识符 变量 全局变量 同时声明多个变量 有些变量名无法使用？ 保留字 ECMAScript关键字 给未来预留的关键字 直接量（又叫字面量）直接量 语句分号 代码块 注释 严格模式 严格模式：启用 严格模式：示例]]></content>
      <categories>
        <category>web</category>
        <category>js</category>
      </categories>
      <tags>
        <tag>标识符</tag>
        <tag>直接量</tag>
        <tag>变量</tag>
        <tag>严格模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[字体图标]]></title>
    <url>%2F2018%2F06%2F21%2Fweb%2Fcss%2F%E5%AD%97%E4%BD%93%E5%9B%BE%E6%A0%87%2F</url>
    <content type="text"><![CDATA[掌握字体图标概念 优点 字体图标资源 @font-face 使用字体图标 font-family 使用字体图标css样式设置]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>字体图标</tag>
        <tag>font-face</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[动画]]></title>
    <url>%2F2018%2F06%2F21%2Fweb%2Fcss%2F%E5%8A%A8%E7%94%BB%2F</url>
    <content type="text"><![CDATA[transition-property 定义和用法transition-property 属性规定应用过渡效果的 CSS 属性的名称。（当指定的 CSS 属性改变时，过渡效果将开始）。 提示：过渡效果通常在用户将鼠标指针浮动到元素上时发生。 transition-duration 定义和用法transition-duration 属性规定完成过渡效果需要花费的时间（以秒或毫秒计）。 transition-timing-function 定义和用法transition-timing-function 属性规定过渡效果的速度曲线。 该属性允许过渡效果随着时间来改变其速度。 transition-delay transition animation-name animation-duration animation-timing-function animation-iteration-count animation-direction animation-play-state animation-delay animation-fill-mode animation @keyframes 链接:https://pan.baidu.com/s/1dv25zYEI7UC-alk-ylCvwg 密码:7pwb]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>transition</tag>
        <tag>animation</tag>
        <tag>keyframes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[变形]]></title>
    <url>%2F2018%2F06%2F21%2Fweb%2Fcss%2F%E5%8F%98%E5%BD%A2%2F</url>
    <content type="text"><![CDATA[transform rotate() translate() scale() skew() transform:&lt;transform-function&gt;+ transform-origin perspevtive perspective-origin translate3d() scale3d() rotate3d() transform-style backface-visibility 链接:https://pan.baidu.com/s/1Kf_UkOGMp_TegE_aVgP_Cw 密码:57bd]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>变形</tag>
        <tag>缩放</tag>
        <tag>旋转</tag>
        <tag>3D</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS布局 position篇]]></title>
    <url>%2F2018%2F06%2F21%2Fweb%2Fcss%2FCSS%E5%B8%83%E5%B1%80%20position%E7%AF%87%2F</url>
    <content type="text"><![CDATA[掌握定位position top/right/bottom/left position:relative position:absolute position:fixed z-index 使用定位布局遮罩 弹出层]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>布局</tag>
        <tag>定位</tag>
        <tag>遮罩</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS布局 float篇]]></title>
    <url>%2F2018%2F06%2F21%2Fweb%2Fcss%2FCSS%E5%B8%83%E5%B1%80%20float%E7%AF%87%2F</url>
    <content type="text"><![CDATA[掌握浮动float clear 清除浮动案例 使用浮动布局图文布局 定宽+自适应布局 定宽+自适应+定宽布局]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>浮动</tag>
        <tag>清除浮动</tag>
        <tag>clear</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS布局 display篇]]></title>
    <url>%2F2018%2F06%2F21%2Fweb%2Fcss%2FCSS%E5%B8%83%E5%B1%80%20display%E7%AF%87%2F</url>
    <content type="text"><![CDATA[认识布局布局 display display:block display:inline block VS inline display:inline-block display:none visibility:hidden 基本布局水平布局]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>display</tag>
        <tag>inline</tag>
        <tag>inline-block</tag>
        <tag>block</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[背景]]></title>
    <url>%2F2018%2F06%2F16%2Fweb%2Fcss%2F%E8%83%8C%E6%99%AF%2F</url>
    <content type="text"><![CDATA[background-color background-image background-repeat background-attachment background-position linear-gradient() 线性渐变 radial-gradient() 径向渐变 repeating-*-gradient background-origin background-clip background-size background 链接: https://pan.baidu.com/s/1-v_stXT9Qa4GfpNf5MgF6g 密码: uegm]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>background</tag>
        <tag>径向渐变</tag>
        <tag>线性渐变</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css盒模型2]]></title>
    <url>%2F2018%2F06%2F16%2Fweb%2Fcss%2Fcss%E7%9B%92%E6%A8%A1%E5%9E%8B2%2F</url>
    <content type="text"><![CDATA[border-radius overflow overflow - visible overflow - hidden overflow - scroll overflow - auto box-sizing box-shadow outline]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>overflow</tag>
        <tag>box</tag>
        <tag>border</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[选择器3]]></title>
    <url>%2F2018%2F06%2F15%2Fweb%2Fcss%2F%E9%80%89%E6%8B%A9%E5%99%A83%2F</url>
    <content type="text"><![CDATA[继承 层叠 示例 优先级 计算 优先级例外 法则 选择器兼容性]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>继承</tag>
        <tag>层叠</tag>
        <tag>优先级</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[选择器2]]></title>
    <url>%2F2018%2F06%2F15%2Fweb%2Fcss%2F%E9%80%89%E6%8B%A9%E5%99%A82%2F</url>
    <content type="text"><![CDATA[组合选择器组合选择器 A B 组合选择器 A &gt; B 组合选择器 A + B 组合选择器 A ~ B 分用选择器 分用选择器 A,B]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>组合选择器</tag>
        <tag>分用选择器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[选择器1]]></title>
    <url>%2F2018%2F06%2F15%2Fweb%2Fcss%2F%E9%80%89%E6%8B%A9%E5%99%A81%2F</url>
    <content type="text"><![CDATA[认识选择器选择器定义 选择器分类 掌握简单选择器 标签选择器 类选择器 id选择器 掌握属性选择器属性选择器-[att] 属性选择器-[att=val] 属性选择器-[att~=val] 属性选择器-[att^=val] 属性选择器-[att|=val] 属性选择器-[att$=val] 掌握伪类/伪元素选择器伪类与伪元素选择器 伪类选择器:checked 伪类选择器:empty 伪类选择器:optional 伪类选择器:read-only/:read-write 伪类选择器:required/:valid 伪类选择器:target 伪类选择器:root 伪类选择器:enabled/:disabled 伪类选择器:first-child/:last-child 伪类选择器:nth-child(n)/:nth-last-child(n) 伪类选择器:link/:visited 伪类选择器:hover/:focus 伪元素选择器::first-letter 伪元素选择器::first-line 伪元素选择器::before/::after 伪元素选择器::selection]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>类选择器</tag>
        <tag>标签选择器</tag>
        <tag>id选择器</tag>
        <tag>属性选择器</tag>
        <tag>伪类选择器</tag>
        <tag>伪元素选择器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文本]]></title>
    <url>%2F2018%2F06%2F15%2Fweb%2Fcss%2F%E6%96%87%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[文本font-size font-family font-weight font-style line-height font color text-decoration text-align vertical-align text-indent white-space word-wrap word-break text-shadow text-overflow cursor inherit]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>font</tag>
        <tag>color</tag>
        <tag>font-family</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css盒模型1]]></title>
    <url>%2F2018%2F06%2F15%2Fweb%2Fcss%2Fcss%E7%9B%92%E6%A8%A1%E5%9E%8B1%2F</url>
    <content type="text"><![CDATA[掌握盒模型css盒模型 元素分类 盒模型属性width max-width与min-width height max-height与min-height padding 值缩写 margin 水平居中 margin合并 border border-style border-width border-color]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>border</tag>
        <tag>盒模型</tag>
        <tag>margin</tag>
        <tag>padding</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css]]></title>
    <url>%2F2018%2F06%2F15%2Fweb%2Fcss%2Fcss%2F</url>
    <content type="text"><![CDATA[CSS语法格式规则集 注释 语法 属性语法 属性名 浏览器私有属性 属性值语法属性值 值类型 整数和实数 长度、百分比 URL、URI 颜色 不支持的值、计数器、字符串 组合符号 - &amp;&amp; 组合符号 - || 组合符号 - | 组合符号 - [] 数量符号 - 无 数量符号 - * 数量符号 - ？ 数量符号 - {} 数量符号 - 属性值例子 @规则语法 @规则语法 @media 示例]]></content>
      <categories>
        <category>web</category>
        <category>css</category>
      </categories>
      <tags>
        <tag>数值符号</tag>
        <tag>css语法</tag>
        <tag>属性</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[插入样式]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E6%8F%92%E5%85%A5%E6%A0%B7%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[插入方式 外联样式表]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>插入方式</tag>
        <tag>外联样式表</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[表格元素]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E8%A1%A8%E6%A0%BC%E5%85%83%E7%B4%A0%2F</url>
    <content type="text"><![CDATA[表格元素table caption colgroup col tbody thead tfoot 顺序 会按顺序输出，即使写错 tr td td-colspan th th-rowspan th-scope]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>表格</tag>
        <tag>table</tag>
        <tag>表格元素</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文档标题]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E6%96%87%E6%A1%A3%E6%A0%87%E9%A2%98%2F</url>
    <content type="text"><![CDATA[文档标题 &lt;title&gt; 文档的标题或名称 一个文档最多一个标题 元素内容当做文本处理 通过脚本设置、获取标题 document.title 文档标题应用案例进度提示]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>title</tag>
        <tag>进度条</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[表单元素]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%2F</url>
    <content type="text"><![CDATA[表单使用使用过程 构建表单 服务器处理接口 配置表单 验证表单 表单控件 form label select 选项分组 禁用状态 datalist option textarea progress meter 展示效果 fieldset 分组表单控件 button 输入控件 input text search tel url email number password checkbox radio file range color date month week time datetime-local reset/submit/button 兼容性https://caniuse.com/]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>表单</tag>
        <tag>服务器接口</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[插入脚本]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E6%8F%92%E5%85%A5%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[插入脚本 行内脚本 on[EventName] 事件触发 javascript 伪协议 内嵌脚本 script 元素 外联脚本 script 元素 内嵌脚本 type 默认为 text/javascript JavaScript 脚本类型 JavaScript 脚本建议不写 type module (ES6) 数据块 浏览器不做脚本解析 外联脚本 async/defer 布尔属性 并行加载脚本 async 立即执行 defer HTML解析完成后执行 如果async和defer同时设置，会按async执行 &lt;script&gt; &lt;script defer&gt; &lt;script async&gt; crossorigin（跨域） Classic Scripts - 是否走CORS流程 - 是否暴露异常的详细信息 - 控制脚本请求时是否携带用户授信信息，如 cookie 等 Module Scripts - 控制脚本请求时是否携带用户授信信息，如 cookie 等 案例]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>行内脚本</tag>
        <tag>内嵌脚本</tag>
        <tag>外联脚本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[嵌入内容]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E5%B5%8C%E5%85%A5%E5%86%85%E5%AE%B9%2F</url>
    <content type="text"><![CDATA[插入图片img 图片热点 视频音频video poster 封面 字幕 audio 插入广告iframe]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>img</tag>
        <tag>图片热点</tag>
        <tag>video</tag>
        <tag>audio</tag>
        <tag>iframe</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[语法]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[语法语法-结构 没有结束标签 除了img还有以下没有结束标签 input meta link area hr br col base embed param source track wbr 语法-属性 checked readonly required selected 语法-嵌套 语法-注释 全局属性 id &lt;div id=&quot;nav&quot;&gt;&lt;/div&gt; class &lt;div class=&quot;time&quot;&gt;&lt;/div&gt; style &lt;div style=&quot;display:none&quot;&gt;&lt;/div&gt; title &lt;div title=&quot;收藏&quot;&gt;&lt;/div&gt; 实体字符实体字符表示]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>语法</tag>
        <tag>实体字符</tag>
        <tag>全局属性</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[内容区分元素]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E5%86%85%E5%AE%B9%E5%88%86%E5%8C%BA%E5%85%83%E7%B4%A0%2F</url>
    <content type="text"><![CDATA[内容区分元素article section div 区别 nav aside header h1-h6 footer]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>article</tag>
        <tag>section</tag>
        <tag>div</tag>
        <tag>nav</tag>
        <tag>aside</tag>
        <tag>header</tag>
        <tag>footer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[列表元素]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E5%88%97%E8%A1%A8%E5%85%83%E7%B4%A0%2F</url>
    <content type="text"><![CDATA[列表元素无序列表 有序列表 自定义列表 列表嵌套]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>无序列表</tag>
        <tag>有序列表</tag>
        <tag>自定义列表</tag>
        <tag>列表</tag>
        <tag>列表嵌套</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[元数据]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E5%85%83%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[meta的作用 描述文档的元数据 meta的属性属性-charset 声明当前文档所使用的字符编码 只有一个 推荐写在第一行 推荐使用UTF-8 属性-content 为name或http-equiv属性提供了与其相关的值的定义 属性-name description keywords viewport application-name author generator referrer viewport content - width - height - initial-scale - maximum-scale - minimum-scale - user-scalable 防盗链-案例 属性-http-equiv refresh content-language content-type default-style set-cookie X-UA-Compatible (default)]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>viewport</tag>
        <tag>meta</tag>
        <tag>charset</tag>
        <tag>content</tag>
        <tag>name</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[超链接]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E8%B6%85%E9%93%BE%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[超链接元素超链接 超链接-download]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>超链接</tag>
        <tag>超链接-download</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[元素分类]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E5%85%83%E7%B4%A0%E5%88%86%E7%B1%BB%2F</url>
    <content type="text"><![CDATA[元素分类 根元素 html 文档元数据 head title base link meta style 内容分区 body article section nav aside h1-h6 header footer 分组内容 p address hr pre blockquote main div ol ul li dl dt dd figure figcaption 文本级语义 a span em strong cite q br i b u code small s sub,sup 嵌入内容 picture source img iframe embed object param video audio track map area template canvas 表格 table caption colgroup col tbody thead tfoot tr td th 表单 form label input button select datalist optgroup option textarea output progress meter fieldset legend 脚本 script noscript 交互 details summary dialog 编辑 ins del]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>元素分类</tag>
        <tag>表单</tag>
        <tag>内容分区</tag>
        <tag>分组内容</tag>
        <tag>表格</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文本元素]]></title>
    <url>%2F2018%2F06%2F08%2Fweb%2Fhtml%2F%E6%96%87%E6%9C%AC%E5%85%83%E7%B4%A0%2F</url>
    <content type="text"><![CDATA[文本内容p pre blockquote 文本语义em strong span br 其他]]></content>
      <categories>
        <category>web</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>p</tag>
        <tag>pre</tag>
        <tag>blockquote</tag>
        <tag>em</tag>
        <tag>文本语义</tag>
      </tags>
  </entry>
</search>
